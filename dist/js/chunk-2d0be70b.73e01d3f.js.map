{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","isSubmitting","submitCount","useField","yup","trim","required","email","value","eError","errorMessage","eBlur","handleBlur","MIN_LENGTH","min","password","pError","pBlur","isToManyAttempts","computed","watch","val","setTimeout","onSubmit","values","dispatch","push","console","log","render"],"mappings":"2IAAsD,eAAwB,UAApB,mBAAe,G,EAAU,eAAsD,SAAnD,mDAA+C,G,EAAS,eAAkC,SAA/B,+BAA2B,G,EAAS,eAAqB,SAAlB,kBAAc,G,EAAkE,eAAgC,SAAvB,IAAE,SAAQ,SAAK,G,YAAqM,eAAoC,SAA3B,IAAE,YAAW,UAAM,G,mBAAsP,MAAM,e,gDAA1vB,eAAu1B,QAAj1B,MAAM,OAAQ,SAAM,8CAAU,4CAAQ,e,CAAO,EAA6B,EAA2D,EAAuC,EAA0B,eAAwN,OAA9M,MAAC,yBAA6B,Y,CAAiB,E,eAAuC,eAA6D,SAAtD,KAAK,OAAO,GAAG,Q,qDAAiB,QAAK,IAAG,OAAI,8BAAE,uC,mBAAd,WAA0C,U,iBAAb,eAAyC,yBAAjB,UAAM,I,0BAA2B,eAAqO,OAA3N,MAAC,yBAA6B,Y,CAAiB,E,eAA2C,eAAsE,SAA/D,KAAK,WAAW,GAAG,W,qDAAoB,WAAQ,IAAG,OAAI,8BAAE,uC,mBAAjB,cAA4C,U,iBAAb,eAAyC,yBAAjB,UAAM,I,0BAA2B,eAAuF,UAA/E,MAAM,cAAe,SAAU,gBAAgB,oBAAkB,QAAK,gBAA6C,oB,iBAA/B,eAA8F,MAA9F,EAAiD,4C,uICM5xB,SAASA,IACd,IAAMC,EAAQC,iBACRC,EAASC,iBACf,EAAoDC,iBAA5CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,YACpC,EAAkEC,eAChE,QACAC,SAEGC,OACAC,SAAS,4BACTC,MAAM,uCANIA,EAAf,EAAQC,MAA4BC,EAApC,EAAsBC,aAAkCC,EAAxD,EAA4CC,WAStCC,EAAa,EAEnB,EAAqEV,eACnE,WACAC,SAEGC,OACAC,SAAS,6BACTQ,IAAID,EAJP,sCAImDA,EAJnD,eAFaE,EAAf,EAAQP,MAA+BQ,EAAvC,EAAyBN,aAAkCO,EAA3D,EAA+CL,WASzCM,EAAmBC,gBAAS,kBAAMjB,EAAYM,OAAS,KAE7DY,eAAMF,GAAkB,SAAAG,GAClBA,GAAKC,YAAW,kBAAMpB,EAAYM,MAAQ,IAAG,SAGnD,IAAMe,EAAWvB,EAAY,yDAAC,WAAMwB,GAAN,0GAEpB7B,EAAM8B,SAAS,aAAcD,GAFT,uBAGpB3B,EAAO6B,KAAK,KAHQ,0DAK1BC,QAAQC,IAAR,MAL0B,yDAAD,uDAS7B,MAAO,CACLrB,QACAQ,WACAN,SACAE,QACAK,SACAC,QACAM,WACAtB,eACAiB,oB,+MCnDJ,EAAOW,OAASA,EAED","file":"js/chunk-2d0be70b.73e01d3f.js","sourcesContent":["<template>\r  <form class=\"card\" @submit.prevent=\"onSubmit\">\r    <h1>Войти в систему</h1>\r    <p>Вы можете войти в систему с тестовыми данными: </p>\r    <p>Email: pavelprobm@gmail.com</p>\r    <p>Пароль: 123123</p>\r    <div :class=\"['form-control', {invalid: eError}]\">\r      <label for=\"email\">Email</label>\r      <input type=\"text\" id=\"email\" v-model=\"email\" @blur=\"eBlur\" >\r      <small v-if=\"eError\">{{ eError }}</small>\r    </div>\r    <div :class=\"['form-control', {invalid: pError}]\">\r      <label for=\"password\">Пароль</label>\r      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r      <small v-if=\"pError\">{{ pError }}</small>\r    </div>\r    <button class=\"btn primary\" :disabled=\"isSubmitting || isToManyAttempts\">Войти</button>\r    <div class=\"text-danger\" v-if=\"isToManyAttempts\">Слишком много попыток. Попробуйте позже</div>\r  </form>\r</template>\r\r<script>\rimport { useLoginForm } from '../use/login-form'\rimport { useRoute } from 'vue-router'\rimport { useStore } from 'vuex'\rimport error from '../utils/error'\r\rexport default {\r  setup () {\r    const route = useRoute()\r    const store = useStore()\r    if (route.query.message) {\r      store.dispatch('setMessage', {\r        value: error(route.query.message),\r        type: 'warning'\r      })\r    }\r    return {...useLoginForm()}\r  },\r}\r</script>\r","import { useField, useForm } from 'vee-validate'\rimport * as yup from 'yup'\rimport { computed, watch } from 'vue'\rimport { useStore } from 'vuex'\rimport { useRouter } from 'vue-router'\r\rexport function useLoginForm() {\r  const store = useStore()\r  const router = useRouter()\r  const { handleSubmit, isSubmitting, submitCount } = useForm()\r  const { value: email, errorMessage: eError, handleBlur: eBlur } = useField(\r    'email',\r    yup\r      .string()\r      .trim()\r      .required('Пожалуйста введите email')\r      .email('Необходимо ввести корректный email'),\r  )\r  \r  const MIN_LENGTH = 6\r  \r  const { value: password, errorMessage: pError, handleBlur: pBlur } = useField(\r    'password',\r    yup\r      .string()\r      .trim()\r      .required('Пожалуйста введите пароль')\r      .min(MIN_LENGTH, `Пароль не может быть меньше ${ MIN_LENGTH } символов`),\r  )\r  \r  const isToManyAttempts = computed(() => submitCount.value >= 3)\r  \r  watch(isToManyAttempts, val => {\r    if (val) setTimeout(() => submitCount.value = 0, 1500)\r  })\r  \r  const onSubmit = handleSubmit(async values => {\r    try {\r      await store.dispatch('auth/login', values)\r      await router.push('/')\r    } catch (e) {\r      console.log(e)\r    }\r  })\r  \r  return {\r    email,\r    password,\r    eError,\r    eBlur,\r    pError,\r    pBlur,\r    onSubmit,\r    isSubmitting,\r    isToManyAttempts,\r  }\r}\r","import { render } from \"./Auth.vue?vue&type=template&id=b1b60d98\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}